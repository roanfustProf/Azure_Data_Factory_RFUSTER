{
	"name": "UpdateProduct",
	"properties": {
		"folder": {
			"name": "Chapter_07"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ANY_ASQL_TABLE",
						"type": "DatasetReference"
					},
					"name": "Sales"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "DeriveProductFeatures"
				},
				{
					"name": "EliminateDuplicates"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RowId as integer,",
				"          Retailer as string,",
				"          SalesMonth as date,",
				"          Product as string,",
				"          SalesValueUSD as decimal(19,2),",
				"          UnitsSold as integer,",
				"          RunSeqNo as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Sales",
				"Sales derive(ProductName = trim(left(Product,length(Product)- length(:WeightString))),",
				"          WeightInOunces = toFloat(replace(:WeightString, :WeightUnit,''))/iif(:WeightUnit=='g', 28.3495,  1.0),",
				"          WeightInGrams = toFloat( replace( :WeightString, :WeightUnit,''))/ iif( :WeightUnit=='oz', 1/28.3495, 1.0),",
				"          WeightString := right(Product, locate(' ', reverse(Product))-1),",
				"          WeightUnit := iif(endsWith(Product,'oz'), 'oz','g')) ~> DeriveProductFeatures",
				"DeriveProductFeatures aggregate(groupBy(Product),",
				"     ProductName = first(ProductName),",
				"          each(match(startsWith(name, 'Weight')), $$ = first($$))) ~> EliminateDuplicates"
			]
		}
	}
}