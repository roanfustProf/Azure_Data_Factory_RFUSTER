{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "project01rfusteradf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Folder_sampledata2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureblobstorage_project01rfusterca_fair",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sampledata2"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/absUsersAdequateshop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "usersadequate.json",
						"folderPath": "outputrest",
						"container": "sampledata"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/abscsvListuserReqresin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filenamecsv": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filenamecsv",
							"type": "Expression"
						},
						"folderPath": "outputrest",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/any_abs_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "anyblobstorage_project01rfuster_p",
					"type": "LinkedServiceReference",
					"parameters": {
						"ConnectionSecret": {
							"value": "@dataset().LinkedServiceConnectionSecret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/any_abs_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "anyblobstorage_project01rfuster_p",
					"type": "LinkedServiceReference",
					"parameters": {
						"ConnectionSecret": {
							"value": "@dataset().LinkedServiceConnectionSecret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/folder_landing_fair')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureblobstorage_project01rfusterca_fair",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "landing"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Chapter_07"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_jollygood",
								"type": "DatasetReference"
							},
							"name": "JollyGoodSales"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage_project01rfusterca",
								"type": "LinkedServiceReference"
							},
							"name": "ExchangeRates"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExcludeMonthTotal"
						},
						{
							"name": "RatesToUSD"
						},
						{
							"name": "LookupExchangeRate"
						},
						{
							"name": "DerivedSalesValueUSD"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     RunSeqNo as integer (-1)",
						"}",
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JollyGoodSales",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     container: 'sampledata',",
						"     folderPath: 'azure-data-factory-by-example-main/SampleData',",
						"     fileName: 'ExchangeRates.xlsx',",
						"     sheetName: 'Sheet1',",
						"     firstRowAsHeader: true) ~> ExchangeRates",
						"JollyGoodSales filter(Product!='Month Total') ~> ExcludeMonthTotal",
						"ExchangeRates filter(ToCurrency=='USD') ~> RatesToUSD",
						"ExcludeMonthTotal, RatesToUSD lookup(Currency == FromCurrency",
						"     && Period == Date,",
						"     multiple: true,",
						"     broadcast: 'auto')~> LookupExchangeRate",
						"LookupExchangeRate derive(SalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,",
						"          Retailer = 'Jolly Good Ltd',",
						"          RunSeqNo = $RunSeqNo) ~> DerivedSalesValueUSD",
						"DerivedSalesValueUSD select(mapColumn(",
						"          SalesMonth = Period,",
						"          Product,",
						"          UnitsSold = {Units Sold},",
						"          SalesValueUSD,",
						"          Retailer,",
						"          RunSeqNo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          ManufacturerProductCode as string,",
						"          SalesValueUSD as decimal(18,2),",
						"          UnitsSold as integer,",
						"          SourceFileName as string,",
						"          RunSeqNo as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Retailer,",
						"          SalesMonth,",
						"          Product,",
						"          SalesValueUSD,",
						"          UnitsSold,",
						"          RunSeqNo",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateProduct')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Chapter_07"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboSales"
						},
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboProduct"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboProductSink"
						}
					],
					"transformations": [
						{
							"name": "DeriveProductFeatures"
						},
						{
							"name": "EliminateDuplicates"
						},
						{
							"name": "NewRowsOnly"
						}
					],
					"scriptLines": [
						"source(output(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          SalesValueUSD as decimal(19,2),",
						"          UnitsSold as integer,",
						"          RunSeqNo as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dboSales",
						"source(output(",
						"          Product as string,",
						"          ProductName as string,",
						"          WeightInOunces as decimal(19,2),",
						"          WeightInGrams as decimal(19,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dboProduct",
						"dboSales derive(ProductName = trim(left(Product,length(Product)- length(:WeightString))),",
						"          WeightInOunces = toFloat(replace(:WeightString, :WeightUnit,''))/iif(:WeightUnit=='g', 28.3495,  1.0),",
						"          WeightInGrams = toFloat( replace( :WeightString, :WeightUnit,''))/ iif( :WeightUnit=='oz', 1/28.3495, 1.0),",
						"          WeightString := right(Product, locate(' ', reverse(Product))-1),",
						"          WeightUnit := iif(endsWith(Product,'oz'), 'oz','g')) ~> DeriveProductFeatures",
						"DeriveProductFeatures aggregate(groupBy(Product),",
						"     ProductName = first(ProductName),",
						"          each(match(startsWith(name,'Weight')), $$ = first($$))) ~> EliminateDuplicates",
						"EliminateDuplicates, dboProduct exists(EliminateDuplicates@Product == dboProduct@Product,",
						"     negate:true,",
						"     broadcast: 'auto')~> NewRowsOnly",
						"NewRowsOnly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Product,",
						"          ProductName,",
						"          WeightInOunces,",
						"          WeightInGrams",
						"     )) ~> dboProductSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wranglehandycandyparquet')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"folder": {
					"name": "Chapter_09"
				},
				"typeProperties": {
					"sources": [
						{
							"name": "ABS_PAR_HandyCandy2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> ABS_PAR_HandyCandy2",
							"dataset": {
								"referenceName": "abs_par_handycandy2",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ABS_PAR_HandyCandy2 = let AdfDoc = AzureStorage.BlobContents(\"https://project01rfustersa.blob.core.windows.net/output/datalake/HandyCandy2.parquet\"), Parquet = Parquet.Document(AdfDoc) in Parquet;\r\nshared UserQuery = let Source = #\"ABS_PAR_HandyCandy2\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"TransactionId\", \"StoreId\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed columns\", \"EndOfPreviousMonth\", each Date.AddDays([TransactionDate],- Date.Day([TransactionDate]) )),\r\n  #\"Added custom 1\" = Table.AddColumn(#\"Added custom\", \"SalesMonth\", each Date.AddDays([EndOfPreviousMonth], 1)),\r\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Added custom 1\", {\"EndOfPreviousMonth\", \"TransactionDate\"}),\r\n  #\"Added custom 2\" = Table.AddColumn(#\"Removed columns 1\", \"ItemCount\", each 1),\r\n  #\"Grouped rows\" = Table.Group(#\"Added custom 2\", {\"Product\", \"SalesMonth\"}, {{\"SalesValueUSD\", each List.Sum([Price]), type nullable number}, {\"UnitsSold\", each List.Sum([ItemCount]), type any}}),\r\n  #\"Added custom 3\" = Table.AddColumn(#\"Grouped rows\", \"Retailer\", each \"Handy Candy\") in #\"Added custom 3\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiREST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['name']['common']"
										},
										"sink": {
											"name": "name_common"
										}
									},
									{
										"source": {
											"path": "$['cca2']"
										},
										"sink": {
											"name": "cca2"
										}
									},
									{
										"source": {
											"path": "$['ccn3']"
										},
										"sink": {
											"name": "ccn3"
										}
									},
									{
										"source": {
											"path": "$['capital'][0]"
										},
										"sink": {
											"name": "capital']["
										}
									},
									{
										"source": {
											"path": "$['region']"
										},
										"sink": {
											"name": "region"
										}
									},
									{
										"source": {
											"path": "$['subregion']"
										},
										"sink": {
											"name": "subregion"
										}
									},
									{
										"source": {
											"path": "$['area']"
										},
										"sink": {
											"name": "area"
										}
									},
									{
										"source": {
											"path": "$['population']"
										},
										"sink": {
											"name": "population"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceCountries2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asqldtblCountries2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DescomprimirCopiarArchivos_FAIR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Descoprimir y copiar archivos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "folder_landing_fair",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Folder_sampledata2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/folder_landing_fair')]",
				"[concat(variables('factoryId'), '/datasets/Folder_sampledata2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DescoprimirCopiarArchivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopiarArchivos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ABS_Folder_Landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ABS_Folder_sampledata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Import sales data",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransformJollyGoodSales",
								"type": "DataFlowReference",
								"parameters": {
									"RunSeqNo": {
										"value": "@int(variables('RunSeqNo'))",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"JollyGoodSales": {},
									"ExchangeRates": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Datos permanentes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Datos permanentes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PersistLoadedSales]",
							"storedProcedureParameters": {
								"runSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TransformJollyGoodSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ',pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE  [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFile_Divert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ',pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If  rows skipped",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_project01rfuster_kv",
										"type": "LinkedServiceReference"
									},
									"path": "output/errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "any_asql_table",
								"type": "DatasetReference",
								"parameters": {
									"Par_table": "Sales_LOAD",
									"Par_esquema": "dbo"
								}
							}
						]
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If  rows skipped",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Datos permanentes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater( activity('Import sales data').output.rowsSkipped, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@join(skip(split(activity('Import sales data').output.logFilePath, '/'), 1), '/')",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "any_abs_csv",
											"type": "DatasetReference",
											"parameters": {
												"Container": "output",
												"Directory": {
													"value": "@join(skip(split(activity('Import sales data').output.logFilePath, '/'), 1), '/')",
													"type": "Expression"
												},
												"File": "*",
												"LinkedServiceConnectionSecret": "connectionStringsa1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "asql_dboloadingerror",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "LoadingError",
												"schemaTableName": "dbo"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Datos permanentes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PersistLoadedSales]",
							"storedProcedureParameters": {
								"runSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.WildcardFolderPath",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.WildcardFileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.WilcardContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.WildcardFolderPath",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.WildcardFileName",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": {
										"value": "@pipeline().parameters.LinkedServiceConnectionSecret",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ',pipeline().Pipeline, ' ejecutado en ',pipeline().DataFactory)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"WildcardFolderPath": {
						"type": "string"
					},
					"WildcardFileName": {
						"type": "string",
						"defaultValue": "*.csv"
					},
					"WilcardContainer": {
						"type": "string",
						"defaultValue": "sampledata"
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_Audit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE  [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName"
										}
									},
									{
										"source": {
											"path": "$['RunSeqNo']"
										},
										"sink": {
											"name": "RunSeqNo"
										}
									}
								],
								"collectionReference": "$['Sales']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ', pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": {
										"value": "Failed",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_P')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo. Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Sales']"
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": ".",
									"File": "."
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_P2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Sales']"
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": ".",
									"File": ".",
									"LinkedServiceConnectionSecret": "StorageAccountConnectionString2"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_json')]"
			]
		}
	]
}