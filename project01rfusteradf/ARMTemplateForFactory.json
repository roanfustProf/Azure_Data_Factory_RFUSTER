{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "project01rfusteradf"
		},
		"AzureBlobStorage_project01rfusterca_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_project01rfusterca'"
		},
		"AzureSqlDatabase_project01rfuster_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_project01rfuster'"
		},
		"SqlServerRFUSTERBD_CONTABILIDAD_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerRFUSTERBD_CONTABILIDAD'",
			"defaultValue": "Integrated Security=False;Data Source=RFUSTER;Initial Catalog=BD_CONTABILIDAD;User ID=pro-cobr1"
		},
		"azureblobstorage_project01rfusterca_fair_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azureblobstorage_project01rfusterca_fair'"
		},
		"AzureBlobStorage_project01rfuster_kv_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "connectionStringsa1"
		},
		"AzureKeyVault_project01rfuster_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://project01rfusterkv13.vault.azure.net/"
		},
		"FileServerRFUSTER_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "D:\\AZURE_DATA_FACTORY"
		},
		"FileServerRFUSTER_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "ESAN_1515497@outlook.com"
		},
		"RestSAdequateshop_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://restapi.adequateshop.com"
		},
		"RestServiceAnonymousDummy_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat(linkedService().urlService,linkedService().nameService)}"
		},
		"RestServiceCountries_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://universities.hipolabs.com/search?country=United+States"
		},
		"RestServiceReqresin_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in"
		},
		"anyblobstorage_project01rfuster_p_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().ConnectionSecret"
		},
		"RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WildcardFolderPath": {
			"type": "string",
			"defaultValue": "azure-data-factory-by-example-main.zip/azure-data-factory-by-example-main/SampleData/Desserts4All"
		},
		"RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WildcardFileName": {
			"type": "string",
			"defaultValue": "*.csv"
		},
		"RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WilcardContainer": {
			"type": "string",
			"defaultValue": "sampledata"
		},
		"RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_LinkedServiceConnectionSecret": {
			"type": "string",
			"defaultValue": "connectionStringsa1"
		},
		"LinkedIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/92388c65-7bea-417c-afc3-568a78329c7a/resourcegroups/project01rfuster-rg/providers/Microsoft.DataFactory/factories/project01rfusteradfshare/integrationruntimes/integrationRuntimeOnPromise"
		},
		"integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "project01rfustersqldbs.database.windows.net"
		},
		"integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "rfuster"
		},
		"integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"RestServiceCountries2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/"
		},
		"default_properties_EnvironmentName_value": {
			"type": "string",
			"defaultValue": "development"
		},
		"default_properties_ResourceGroupName_value": {
			"type": "string",
			"defaultValue": "project01rfuster-rg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DescomprimirCopiarArchivos_FAIR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Descoprimir y copiar archivos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "folder_landing_fair",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Folder_sampledata2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/folder_landing_fair')]",
				"[concat(variables('factoryId'), '/datasets/Folder_sampledata2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DescoprimirCopiarArchivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopiarArchivos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ABS_Folder_Landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ABS_Folder_sampledata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_Folder_Landing')]",
				"[concat(variables('factoryId'), '/datasets/ABS_Folder_sampledata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportCandyShackSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/CandyShack",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesMonth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SkuCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "UnitsSold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_csv_candyshack",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_csv_candyshack')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportHandyCandySales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Product",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Product",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Single",
											"physicalType": "FLOAT"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_par_handycandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_par_handycandy')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Import sales data",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TransformJollyGoodSales",
								"type": "DataFlowReference",
								"parameters": {
									"RunSeqNo": {
										"value": "@int(variables('RunSeqNo'))",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"JollyGoodSales": {},
									"ExchangeRates": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Datos permanentes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Datos permanentes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PersistLoadedSales]",
							"storedProcedureParameters": {
								"runSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/dataflows/TransformJollyGoodSales')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ',pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE  [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]",
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFile_Divert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ',pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If  rows skipped",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_project01rfuster_kv",
										"type": "LinkedServiceReference"
									},
									"path": "output/errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "any_asql_table",
								"type": "DatasetReference",
								"parameters": {
									"Par_table": "Sales_LOAD",
									"Par_esquema": "dbo"
								}
							}
						]
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If  rows skipped",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Datos permanentes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater( activity('Import sales data').output.rowsSkipped, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@join(skip(split(activity('Import sales data').output.logFilePath, '/'), 1), '/')",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "any_abs_csv",
											"type": "DatasetReference",
											"parameters": {
												"Container": "output",
												"Directory": {
													"value": "@join(skip(split(activity('Import sales data').output.logFilePath, '/'), 1), '/')",
													"type": "Expression"
												},
												"File": "*",
												"LinkedServiceConnectionSecret": "connectionStringsa1"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "asql_dboloadingerror",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "LoadingError",
												"schemaTableName": "dbo"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Datos permanentes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PersistLoadedSales]",
							"storedProcedureParameters": {
								"runSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]",
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]",
				"[concat(variables('factoryId'), '/datasets/any_asql_table')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfuster_kv')]",
				"[concat(variables('factoryId'), '/datasets/asql_dboloadingerror')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get file list",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.FolderPath",
										"type": "Expression"
									},
									"File": " ",
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							},
							"fieldList": [
								"exists",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get file list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get file list').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ImportSTFormatFile_Divert",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": {
												"value": "@pipeline().parameters.FolderPath",
												"type": "Expression"
											},
											"File": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderPath": {
						"type": "string",
						"defaultValue": "azure-data-factory-by-example-main/SampleData/NaughtyButNice"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]",
				"[concat(variables('factoryId'), '/pipelines/ImportSTFormatFile_Divert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSTFormatFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.WildcardFolderPath",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.WildcardFileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.WilcardContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.WildcardFolderPath",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.WildcardFileName",
										"type": "Expression"
									},
									"LinkedServiceConnectionSecret": {
										"value": "@pipeline().parameters.LinkedServiceConnectionSecret",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ',pipeline().Pipeline, ' ejecutado en ',pipeline().DataFactory)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"WildcardFolderPath": {
						"type": "string"
					},
					"WildcardFileName": {
						"type": "string",
						"defaultValue": "*.csv"
					},
					"WilcardContainer": {
						"type": "string",
						"defaultValue": "sampledata"
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_csv')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSalesAll')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data SweetTreats",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportSTFormatFile_Divert",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "azure-data-factory-by-example-main/SampleData/SweetTreats",
								"File": "*.csv"
							}
						}
					},
					{
						"name": "Import Sales Data Desserts4All",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportSTFormatFile_Divert",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "azure-data-factory-by-example-main/SampleData/Desserts4All",
								"File": "*.csv"
							}
						}
					},
					{
						"name": "Import Sales NaughtyButNice",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportSTFormatFile_Divert",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": "azure-data-factory-by-example-main/SampleData/NaughtyButNice",
								"File": "*.csv"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ImportSTFormatFile_Divert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSalesFromCSVFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales SweetTreats",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportSTFormatFolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats",
								"WildcardFileName": "*.csv",
								"WilcardContainer": "sampledata",
								"LinkedServiceConnectionSecret": "connectionStringsa1"
							}
						}
					},
					{
						"name": "Import Sales Desserts4All",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Import Sales SweetTreats",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportSTFormatFolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WildcardFolderPath": "azure-data-factory-by-example-main/SampleData/Desserts4All",
								"WildcardFileName": "*.csv",
								"WilcardContainer": "sampledata",
								"LinkedServiceConnectionSecret": "connectionStringsa1"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ImportSTFormatFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo. Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Sales']"
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json_sugarcube",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json_sugarcube')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_Audit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE  [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName"
										}
									},
									{
										"source": {
											"path": "$['RunSeqNo']"
										},
										"sink": {
											"name": "RunSeqNo"
										}
									}
								],
								"collectionReference": "$['Sales']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": {
										"value": "@pipeline().parameters.Directory",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ', pipeline().Pipeline, ' ejecutado en ', pipeline().DataFactory, ' cargando archivo ', pipeline().parameters.Directory,'\\', pipeline().parameters.File)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log pipeline failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": {
										"value": "Failed",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_P')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo. Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Sales']"
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": ".",
									"File": "."
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSugarCubeSales_P2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SugarCube",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Sales_LOAD]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ManufacturerProductCode']"
										},
										"sink": {
											"name": "ManufacturerProductCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Units']"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['Value']"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Month']"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['Company']"
										},
										"sink": {
											"name": "Retailer",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Sales']"
							}
						},
						"inputs": [
							{
								"referenceName": "any_abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": ".",
									"File": ".",
									"LinkedServiceConnectionSecret": "StorageAccountConnectionString2"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_abs_json')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSweetTreatsSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import Sales Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/SweetTreats",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Retailer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesMonth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesMonth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesValueUSD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesValueUSD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "UnitsSold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitsSold",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_csv_SweetTreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_csv_SweetTreats')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportSweetTreatsSales_Audit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main.zip/azure-data-factory-by-example-main/SampleData/SweetTreats",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_csv_SweetTreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Log pipeline outcome",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_project01rfuster",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "@concat('Pipeline ',pipeline().Pipeline,' ejecutado en ',pipeline().DataFactory)",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@string(activity('Lookup RunSeqNo').output.firstRow.RunSeqEnd)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"RunSeqNo": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_04"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_csv_SweetTreats')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestHandyCandyMessages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Price']"
										},
										"sink": {
											"name": "Price",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['TransactionId']"
										},
										"sink": {
											"name": "TransactionId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "$['TransactionDate']"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['StoreId']"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int16"
										}
									}
								],
								"collectionReference": "$['Items']"
							}
						},
						"inputs": [
							{
								"referenceName": "abs_json_handycandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_par_handycandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json_handycandy')]",
				"[concat(variables('factoryId'), '/datasets/abs_par_handycandy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestHandyCandyMessages_P')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"Directory": ".",
									"File": "."
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_par_handycandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_json')]",
				"[concat(variables('factoryId'), '/datasets/abs_par_handycandy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"description": "prueba",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ABS_Folder_Landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ABS_Folder_sampledata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_10"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ABS_Folder_Landing')]",
				"[concat(variables('factoryId'), '/datasets/ABS_Folder_sampledata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestExecutePipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package1",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "ProjectSampleSSIS01/Azure-SSIS-IntegrationRuntimeTest/TestPackage.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "integrationRuntimeSSIS",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"packageParameters": {
								"PipelineRunId": {
									"value": {
										"value": "@string(pipeline().RunId)",
										"type": "Expression"
									}
								}
							},
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_08"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeSSIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateProductDimension')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateProduct",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateProduct",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dboSales": {
										"Par_table": "Sales",
										"Par_esquema": "dbo"
									},
									"dboProduct": {
										"Par_table": "Product",
										"Par_esquema": "dbo"
									},
									"dboProductSink": {
										"Par_table": "Product",
										"Par_esquema": "dbo"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WrangleHandyCandyParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "wranglehandycandyparquet",
								"type": "DataFlowReference",
								"datasetParameters": {
									"ABS_PAR_HandyCandy2": {},
									"UserQueryASQLdboSalesLoad": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryASQLdboSalesLoad",
											"dataset": {
												"referenceName": "asql_dbosalesload",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tRowId as integer,\n\t\tRetailer as string,\n\t\tSalesMonth as date,\n\t\tProduct as string,\n\t\tManufacturerProductCode as string,\n\t\tSalesValueUSD as decimal(18,2),\n\t\tUnitsSold as integer,\n\t\tSourceFileName as string,\n\t\tRunSeqNo as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> UserQueryASQLdboSalesLoad"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_09"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/wranglehandycandyparquet')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTCountries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['alpha_two_code']"
										},
										"sink": {
											"name": "alpha_two_code",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['state-province']"
										},
										"sink": {
											"name": "state-province",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceCountries",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureSqlTableCountries",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceCountries')]",
				"[concat(variables('factoryId'), '/datasets/azureSqlTableCountries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTEmployees')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from rest api",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['employee_name']"
										},
										"sink": {
											"name": "employee_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employee_salary']"
										},
										"sink": {
											"name": "employee_salary"
										}
									},
									{
										"source": {
											"path": "[['employee_age']"
										},
										"sink": {
											"name": "employee_age"
										}
									},
									{
										"source": {
											"path": "[['profile_image']"
										},
										"sink": {
											"name": "profile_image"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceEmployees",
								"type": "DatasetReference",
								"parameters": {
									"nameService": "employees"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asqldb_dbotblEmployees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceEmployees')]",
				"[concat(variables('factoryId'), '/datasets/asqldb_dbotblEmployees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTListUserForeach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web list user page 1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://reqres.in/api/users?page=1",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "ForEach get user by page",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web list user page 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1, activity('Web list user page 1').output.total_pages)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "apiRESTListUserbypage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pageUrlService": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/apiRESTListUserbypage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTListUserForeach2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web get page 1 list users",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://reqres.in/api/users?page=1",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web get page 1 list users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,activity('Web get page 1 list users').output.total_pages)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "apiRESTListUserbypage2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"relativeURLpage": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/apiRESTListUserbypage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTListUserbypage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "email"
										}
									},
									{
										"source": {
											"path": "[['first_name']"
										},
										"sink": {
											"name": "first_name"
										}
									},
									{
										"source": {
											"path": "[['last_name']"
										},
										"sink": {
											"name": "last_name"
										}
									},
									{
										"source": {
											"path": "[['avatar']"
										},
										"sink": {
											"name": "avatar"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestRrequrestListUsers",
								"type": "DatasetReference",
								"parameters": {
									"relativeURL": {
										"value": "/api/users?page=@{pipeline().parameters.pageUrlService}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abscsvListuserReqresin",
								"type": "DatasetReference",
								"parameters": {
									"filenamecsv": {
										"value": "listuserReqrein@{pipeline().parameters.pageUrlService}.csv",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pageUrlService": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestRrequrestListUsers')]",
				"[concat(variables('factoryId'), '/datasets/abscsvListuserReqresin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTListUserbypage2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['first_name']"
										},
										"sink": {
											"name": "first_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['last_name']"
										},
										"sink": {
											"name": "last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['avatar']"
										},
										"sink": {
											"name": "avatar"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestRrequrestListUsers",
								"type": "DatasetReference",
								"parameters": {
									"relativeURL": {
										"value": "/api/users?page=@{pipeline().parameters.relativeURLpage}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "asqltblLisUserReqresin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"relativeURLpage": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestRrequrestListUsers')]",
				"[concat(variables('factoryId'), '/datasets/asqltblLisUserReqresin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "$['username']"
										},
										"sink": {
											"name": "username"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email"
										}
									},
									{
										"source": {
											"path": "$['address']['street']"
										},
										"sink": {
											"name": "street"
										}
									},
									{
										"source": {
											"path": "$['address']['suite']"
										},
										"sink": {
											"name": "suite"
										}
									},
									{
										"source": {
											"path": "$['address']['city']"
										},
										"sink": {
											"name": "city"
										}
									},
									{
										"source": {
											"path": "$['address']['zipcode']"
										},
										"sink": {
											"name": "zipcode"
										}
									},
									{
										"source": {
											"path": "$['address']['geo']['lat']"
										},
										"sink": {
											"name": "lat"
										}
									},
									{
										"source": {
											"path": "$['address']['geo']['lng']"
										},
										"sink": {
											"name": "lng"
										}
									},
									{
										"source": {
											"path": "$['phone']"
										},
										"sink": {
											"name": "phone"
										}
									},
									{
										"source": {
											"path": "$['website']"
										},
										"sink": {
											"name": "website"
										}
									},
									{
										"source": {
											"path": "$['company']['name']"
										},
										"sink": {
											"name": "company_name"
										}
									},
									{
										"source": {
											"path": "$['company']['catchPhrase']"
										},
										"sink": {
											"name": "catchPhrase"
										}
									},
									{
										"source": {
											"path": "$['company']['bs']"
										},
										"sink": {
											"name": "bs"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asqldb_dbotblUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceUser')]",
				"[concat(variables('factoryId'), '/datasets/asqldb_dbotblUser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTUsersToJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResourceUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "any_abs_json",
								"type": "DatasetReference",
								"parameters": {
									"Container": "sampledata",
									"File": "user.json",
									"LinkedServiceConnectionSecret": "connectionStringsa1"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceUser')]",
				"[concat(variables('factoryId'), '/datasets/any_abs_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTtoken')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web User Login",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://restapi.adequateshop.com/api/authaccount/login",
							"method": "POST",
							"headers": {},
							"body": {
								"email": "ronydeveloper@gmail.com",
								"password": 123456
							}
						}
					},
					{
						"name": "Web Get All Users",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web User Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://restapi.adequateshop.com/api/users?page=1",
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "Bearer @{activity('Web User Login').output.data.Token}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTtoken2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web post user login",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://restapi.adequateshop.com/api/authaccount/login",
							"method": "POST",
							"headers": {},
							"body": {
								"email": "ronydeveloper@gmail.com",
								"password": 123456
							}
						}
					},
					{
						"name": "Import users",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web post user login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "Bearer @{activity('Web post user login').output.data.Token}",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestRUsersAdequateshop",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "absUsersAdequateshop",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestRUsersAdequateshop')]",
				"[concat(variables('factoryId'), '/datasets/absUsersAdequateshop')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRESTtoken3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wee get token 2",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://restapi.adequateshop.com/api/authaccount/login",
							"method": "POST",
							"headers": {},
							"body": {
								"email": "ronydeveloper@gmail.com",
								"password": 123456
							}
						}
					},
					{
						"name": "Import users 2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wee get token 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "Bearer @{activity('Wee get token 2').output.data.Token}",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['profilepicture']"
										},
										"sink": {
											"name": "profilepicture"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "location"
										}
									},
									{
										"source": {
											"path": "[['createdat']"
										},
										"sink": {
											"name": "createdat"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestRUsersAdequateshop",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asqlttblUsersAdequate",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestRUsersAdequateshop')]",
				"[concat(variables('factoryId'), '/datasets/asqlttblUsersAdequate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dependencia",
							"value": {
								"value": "@string(int('no es un int'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Set variable4",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dependencia",
							"value": {
								"value": "@string('Hola Rony')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Skipped",
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dependencia",
							"value": {
								"value": "@string('Hola Anderson')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable4",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dependencia",
							"value": {
								"value": "@string('hola 2')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Dependencia": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_csv_SweetTreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_csv_SweetTreats')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "FS_FolderADF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ABS_Folder_Landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_08"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FS_FolderADF')]",
				"[concat(variables('factoryId'), '/datasets/ABS_Folder_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "USP_PRUEBA1"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerRFUSTERBD_CONTABILIDAD",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Chapter_08"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerRFUSTERBD_CONTABILIDAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_Folder_Landing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "landing"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfuster_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_Folder_sampledata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sampledata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQLDB_dboProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "WeightInOunces",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					},
					{
						"name": "WeightInGrams",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQLDB_dboSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retailer",
						"type": "nvarchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 19,
						"scale": 2
					},
					{
						"name": "UnitsSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RunSeqNo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FS_FolderADF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServerRFUSTER",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_08"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "SQLAZURE_ADF.sql"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServerRFUSTER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Folder_sampledata2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureblobstorage_project01rfusterca_fair",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sampledata2"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureblobstorage_project01rfusterca_fair')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestRUsersAdequateshop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestSAdequateshop",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/api/users?page=1"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestSAdequateshop')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceCountries')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceCountries",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceCountries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceAnonymousDummy",
					"type": "LinkedServiceReference",
					"parameters": {
						"urlService": "https://dummy.restapiexample.com/api/v1/",
						"nameService": {
							"value": "@dataset().nameService",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"nameService": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceAnonymousDummy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceUser')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceAnonymousDummy",
					"type": "LinkedServiceReference",
					"parameters": {
						"urlService": "https://jsonplaceholder.typicode.com/",
						"nameService": "users"
					}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceAnonymousDummy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestRrequrestListUsers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceReqresin",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeURL",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceReqresin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/absUsersAdequateshop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "usersadequate.json",
						"folderPath": "outputrest",
						"container": "sampledata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfuster_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_csv_SweetTreats')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales.csv",
						"folderPath": "azure-data-factory-by-example-main.zip/azure-data-factory-by-example-main/SampleData/SweetTreats/Apr-20",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesValueUSD",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_csv_candyshack')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020-04.csv",
						"folderPath": "azure-data-factory-by-example-main/SampleData/CandyShack",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Retailer",
						"type": "String"
					},
					{
						"name": "SkuCode",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "SalesMonth",
						"type": "String"
					},
					{
						"name": "SalesValue",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfuster_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_json_handycandy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "00816cd4-0d98-4505-8b8f-8b3ba08aab31.json",
						"folderPath": "azure-data-factory-by-example-main/SampleData/HandyCandy",
						"container": "sampledata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"TransactionId": {
							"type": "string"
						},
						"TransactionDate": {
							"type": "string"
						},
						"StoreId": {
							"type": "string"
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Product": {
										"type": "string"
									},
									"Price": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_json_sugarcube')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "April.json",
						"folderPath": "azure-data-factory-by-example-main/SampleData/SugarCube/2020/Q2",
						"container": "sampledata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Month": {
							"type": "string"
						},
						"Company": {
							"type": "string"
						},
						"Sales": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Product": {
										"type": "string"
									},
									"ManufacturerProductCode": {
										"type": "string"
									},
									"Units": {
										"type": "integer"
									},
									"Value": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_par_handycandy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HandyCandy2.parquet",
						"folderPath": "datalake",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abs_par_handycandy2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HandyCandy2.parquet",
						"folderPath": "datalake",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Product",
						"type": "UTF8"
					},
					{
						"name": "Price",
						"type": "FLOAT"
					},
					{
						"name": "TransactionId",
						"type": "UTF8"
					},
					{
						"name": "TransactionDate",
						"type": "INT96"
					},
					{
						"name": "StoreId",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/abscsvListuserReqresin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfuster_kv",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filenamecsv": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filenamecsv",
							"type": "Expression"
						},
						"folderPath": "outputrest",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfuster_kv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/any_abs_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "anyblobstorage_project01rfuster_p",
					"type": "LinkedServiceReference",
					"parameters": {
						"ConnectionSecret": {
							"value": "@dataset().LinkedServiceConnectionSecret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/anyblobstorage_project01rfuster_p')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/any_abs_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "anyblobstorage_project01rfuster_p",
					"type": "LinkedServiceReference",
					"parameters": {
						"ConnectionSecret": {
							"value": "@dataset().LinkedServiceConnectionSecret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "."
					},
					"File": {
						"type": "string",
						"defaultValue": "."
					},
					"LinkedServiceConnectionSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Chapter_05"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/anyblobstorage_project01rfuster_p')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/any_asql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Par_table": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Par_esquema": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Par_esquema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Par_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_dboloadingerror')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string",
						"defaultValue": "LoadingError"
					},
					"schemaTableName": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"folder": {
					"name": "Chapter_06"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Timestamp",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "OperationName",
						"type": "nvarchar"
					},
					{
						"name": "OperationItem",
						"type": "nvarchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaTableName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_dbosalesload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_03"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Retailer",
						"type": "nvarchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "ManufacturerProductCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesValueUSD",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "UnitsSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RunSeqNo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales_LOAD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asqldb_dbotblEmployees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblEmployees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asqldb_dbotblUser')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblUser"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asqltblLisUserReqresin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblLisUserReqresin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asqlttblUsersAdequate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblUsersAdequate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureSqlTableCountries')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblCountries"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/folder_landing_fair')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azureblobstorage_project01rfusterca_fair",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_02"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "landing"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azureblobstorage_project01rfusterca_fair')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsx_jollygood')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_project01rfusterca",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Chapter_07"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SALES",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales Apr-Sep 2020.xlsx",
						"folderPath": "azure-data-factory-by-example-main/SampleData/JollyGood",
						"container": "sampledata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_project01rfuster_kv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Utiliza key vault",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_project01rfuster",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureBlobStorage_project01rfuster_kv_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_project01rfusterca')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "sin key vaul",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_project01rfusterca_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_project01rfuster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_project01rfuster_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_project01rfuster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_project01rfuster_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServerRFUSTER')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServerRFUSTER_properties_typeProperties_host')]",
					"userId": "[parameters('FileServerRFUSTER_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_project01rfuster",
							"type": "LinkedServiceReference"
						},
						"secretName": "connectionPFileSystemRFUSTER"
					}
				},
				"connectVia": {
					"referenceName": "LinkedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/LinkedIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestSAdequateshop')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestSAdequateshop_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceAnonymousDummy')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"urlService": {
						"type": "string",
						"defaultValue": "https://dummy.restapiexample.com/api/v1/"
					},
					"nameService": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceAnonymousDummy_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCountries')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCountries_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceReqresin')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceReqresin_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerRFUSTERBD_CONTABILIDAD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerRFUSTERBD_CONTABILIDAD_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_project01rfuster",
							"type": "LinkedServiceReference"
						},
						"secretName": "SqlServerRFUSTERP"
					}
				},
				"connectVia": {
					"referenceName": "LinkedIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/LinkedIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/anyblobstorage_project01rfuster_p')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ConnectionSecret": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_project01rfuster",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "[parameters('anyblobstorage_project01rfuster_p_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobstorage_project01rfusterca_fair')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('azureblobstorage_project01rfusterca_fair_connectionString')]"
				},
				"connectVia": {
					"referenceName": "FarAwayintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/FarAwayintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunEvery2Minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ImportSweetTreatsSales_Audit",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ImportSTFormatFolder",
							"type": "PipelineReference"
						},
						"parameters": {
							"WildcardFolderPath": "[parameters('RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WildcardFolderPath')]",
							"WildcardFileName": "[parameters('RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WildcardFileName')]",
							"WilcardContainer": "[parameters('RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_WilcardContainer')]",
							"LinkedServiceConnectionSecret": "[parameters('RunEvery2Minutes_properties_ImportSTFormatFolder_parameters_LinkedServiceConnectionSecret')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2023-05-24T13:36:00",
						"timeZone": "SA Pacific Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ImportSweetTreatsSales_Audit')]",
				"[concat(variables('factoryId'), '/pipelines/ImportSTFormatFolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FarAwayintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('LinkedIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeSSIS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Brazil South",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 2
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('integrationRuntimeSSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Chapter_07"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_jollygood",
								"type": "DatasetReference"
							},
							"name": "JollyGoodSales"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage_project01rfusterca",
								"type": "LinkedServiceReference"
							},
							"name": "ExchangeRates"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "asql_dbosalesload",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExcludeMonthTotal"
						},
						{
							"name": "RatesToUSD"
						},
						{
							"name": "LookupExchangeRate"
						},
						{
							"name": "DerivedSalesValueUSD"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     RunSeqNo as integer (-1)",
						"}",
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> JollyGoodSales",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     container: 'sampledata',",
						"     folderPath: 'azure-data-factory-by-example-main/SampleData',",
						"     fileName: 'ExchangeRates.xlsx',",
						"     sheetName: 'Sheet1',",
						"     firstRowAsHeader: true) ~> ExchangeRates",
						"JollyGoodSales filter(Product!='Month Total') ~> ExcludeMonthTotal",
						"ExchangeRates filter(ToCurrency=='USD') ~> RatesToUSD",
						"ExcludeMonthTotal, RatesToUSD lookup(Currency == FromCurrency",
						"     && Period == Date,",
						"     multiple: true,",
						"     broadcast: 'auto')~> LookupExchangeRate",
						"LookupExchangeRate derive(SalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,",
						"          Retailer = 'Jolly Good Ltd',",
						"          RunSeqNo = $RunSeqNo) ~> DerivedSalesValueUSD",
						"DerivedSalesValueUSD select(mapColumn(",
						"          SalesMonth = Period,",
						"          Product,",
						"          UnitsSold = {Units Sold},",
						"          SalesValueUSD,",
						"          Retailer,",
						"          RunSeqNo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          ManufacturerProductCode as string,",
						"          SalesValueUSD as decimal(18,2),",
						"          UnitsSold as integer,",
						"          SourceFileName as string,",
						"          RunSeqNo as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Retailer,",
						"          SalesMonth,",
						"          Product,",
						"          SalesValueUSD,",
						"          UnitsSold,",
						"          RunSeqNo",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/xlsx_jollygood')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_project01rfusterca')]",
				"[concat(variables('factoryId'), '/datasets/asql_dbosalesload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateProduct')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Chapter_07"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboSales"
						},
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboProduct"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "any_asql_table",
								"type": "DatasetReference"
							},
							"name": "dboProductSink"
						}
					],
					"transformations": [
						{
							"name": "DeriveProductFeatures"
						},
						{
							"name": "EliminateDuplicates"
						},
						{
							"name": "NewRowsOnly"
						}
					],
					"scriptLines": [
						"source(output(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          SalesValueUSD as decimal(19,2),",
						"          UnitsSold as integer,",
						"          RunSeqNo as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dboSales",
						"source(output(",
						"          Product as string,",
						"          ProductName as string,",
						"          WeightInOunces as decimal(19,2),",
						"          WeightInGrams as decimal(19,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> dboProduct",
						"dboSales derive(ProductName = trim(left(Product,length(Product)- length(:WeightString))),",
						"          WeightInOunces = toFloat(replace(:WeightString, :WeightUnit,''))/iif(:WeightUnit=='g', 28.3495,  1.0),",
						"          WeightInGrams = toFloat( replace( :WeightString, :WeightUnit,''))/ iif( :WeightUnit=='oz', 1/28.3495, 1.0),",
						"          WeightString := right(Product, locate(' ', reverse(Product))-1),",
						"          WeightUnit := iif(endsWith(Product,'oz'), 'oz','g')) ~> DeriveProductFeatures",
						"DeriveProductFeatures aggregate(groupBy(Product),",
						"     ProductName = first(ProductName),",
						"          each(match(startsWith(name,'Weight')), $$ = first($$))) ~> EliminateDuplicates",
						"EliminateDuplicates, dboProduct exists(EliminateDuplicates@Product == dboProduct@Product,",
						"     negate:true,",
						"     broadcast: 'auto')~> NewRowsOnly",
						"NewRowsOnly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Product,",
						"          ProductName,",
						"          WeightInOunces,",
						"          WeightInGrams",
						"     )) ~> dboProductSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/any_asql_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wranglehandycandyparquet')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"folder": {
					"name": "Chapter_09"
				},
				"typeProperties": {
					"sources": [
						{
							"name": "ABS_PAR_HandyCandy2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> ABS_PAR_HandyCandy2",
							"dataset": {
								"referenceName": "abs_par_handycandy2",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ABS_PAR_HandyCandy2 = let AdfDoc = AzureStorage.BlobContents(\"https://project01rfustersa.blob.core.windows.net/output/datalake/HandyCandy2.parquet\"), Parquet = Parquet.Document(AdfDoc) in Parquet;\r\nshared UserQuery = let Source = #\"ABS_PAR_HandyCandy2\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"TransactionId\", \"StoreId\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed columns\", \"EndOfPreviousMonth\", each Date.AddDays([TransactionDate],- Date.Day([TransactionDate]) )),\r\n  #\"Added custom 1\" = Table.AddColumn(#\"Added custom\", \"SalesMonth\", each Date.AddDays([EndOfPreviousMonth], 1)),\r\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Added custom 1\", {\"EndOfPreviousMonth\", \"TransactionDate\"}),\r\n  #\"Added custom 2\" = Table.AddColumn(#\"Removed columns 1\", \"ItemCount\", each 1),\r\n  #\"Grouped rows\" = Table.Group(#\"Added custom 2\", {\"Product\", \"SalesMonth\"}, {{\"SalesValueUSD\", each List.Sum([Price]), type nullable number}, {\"UnitsSold\", each List.Sum([ItemCount]), type any}}),\r\n  #\"Added custom 3\" = Table.AddColumn(#\"Grouped rows\", \"Retailer\", each \"Handy Candy\") in #\"Added custom 3\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/abs_par_handycandy2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiREST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['name']['common']"
										},
										"sink": {
											"name": "name_common"
										}
									},
									{
										"source": {
											"path": "$['cca2']"
										},
										"sink": {
											"name": "cca2"
										}
									},
									{
										"source": {
											"path": "$['ccn3']"
										},
										"sink": {
											"name": "ccn3"
										}
									},
									{
										"source": {
											"path": "$['capital'][0]"
										},
										"sink": {
											"name": "capital']["
										}
									},
									{
										"source": {
											"path": "$['region']"
										},
										"sink": {
											"name": "region"
										}
									},
									{
										"source": {
											"path": "$['subregion']"
										},
										"sink": {
											"name": "subregion"
										}
									},
									{
										"source": {
											"path": "$['area']"
										},
										"sink": {
											"name": "area"
										}
									},
									{
										"source": {
											"path": "$['population']"
										},
										"sink": {
											"name": "population"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "RestResourceCountries2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asqldtblCountries2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResourceCountries2')]",
				"[concat(variables('factoryId'), '/datasets/asqldtblCountries2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCountries2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCountries2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceCountries2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceCountries2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/v3.1/region/america"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceCountries2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asqldtblCountries2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_project01rfuster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblCountries2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_project01rfuster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"EnvironmentName": {
					"type": "string",
					"value": "[parameters('default_properties_EnvironmentName_value')]"
				},
				"ResourceGroupName": {
					"type": "string",
					"value": "[parameters('default_properties_ResourceGroupName_value')]"
				}
			},
			"dependsOn": []
		}
	]
}